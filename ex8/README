yochze
201517018
Yochay Ettun

Readme for the 8th exercise in Intro2CS.

Usage:
python3 asteroidsMain.py
 
==================
=  Description:  =
==================
The program is an OOP implementation of Asteroids game.
It uses external graphic interface provided by TKinter and Turtle.

In the exercise I implemented large portion of the GameRunner(asteroidsMain.py)
class. Including movement of objects, shooting torpedos, gaining scores, etc.

Exiting game occures when the end-user presses "q" key or loses all of his 
lives, or winning and destroying all asteroids. 


============
 Bonus (1):
============

Add a SUPERTORPEDO !
By pressing "Return" key the spaceship shoots a super torpedo
Even though its life span is half of regular torpedo, it's much bigger
and much more destructive!! :)

To add the super torpedo I did the following:
1. Added a superTorpedo.py file that contain the class SuperTorpedo
The class, similarly to the Torpedo class inherirts from BaseObject
and has same initialization method.
also, like torpedo class, I added get_lifespan getter and move function.
Some more unique attributes has also been set, like: color, lifespan.

2. I extended objectShape to contain the SuperTorpedo new dimensions (it's 3 times
bigger than the regular torpedo) and then the added the shape to the shapebase
dictionary.

3. I extended gameMaster and imported super_torpedo into it.
I added binding support for the "return" key which calls the private
"handle_super_fire" function.
When the end-user clicks "return" key, a new SuperTorpedo is instantiated and
being added to the torpedos list (along with the regular torpedo)
that way, I can keep all the mechanism of regular torpedos also to cover the
super torpedos. For example: limit, torpedos_count etc..

4. Added the new shape to the gameMaster.py file and to the game flow.

==============================
 Experince of using the API:
==============================

It was a very good experience. The API is well documented and very 
comprehensive. It contained everything I needed to know about the data models
and helped me to easily implement the exercise.



=============================
=  List of submitted files: =
=============================

README                  This file
asteroidsMain.py        The file containing the class with the game loop
                        function that handles the game flow.
super_torpedo.          The file contain the super_torpedo shape class
                        that was added for the bonus assignment.





